import { useState, useEffect, Fragment } from "react";
import { useRouter } from "next/router";
import type { NextPage } from "next";
import Head from "next/head";
import { useSelector } from "react-redux";
import { Container, Box, Typography } from "@mui/material";
import { RootStateType, ReposStateType, RepoType } from "../../src/types";
import { getLicenceData } from "../../src/utils";

const RepositoryPage: NextPage = () => {
  const [objRepository, setObjRepository] = useState<RepoType | null>(null);
  const router = useRouter();
  const { query } = router;
  const { arrRepos, bLoading, nStrError } = useSelector<
    RootStateType,
    ReposStateType
  >((state) => state.repos);

  useEffect(() => {
    if (!query.id) return;
    console.log("query.id :>> ", query.id);
    const intSelectedId = parseInt(query.id as string, 10);
    const objSelectedRepo =
      arrRepos.find((objRepo) => objRepo.id === intSelectedId) || null;
    setObjRepository(objSelectedRepo);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [query]);

  return (
    <Container sx={{ backgroundColor: (theme) => theme.bg.main }}>
      <Head>
        <title>Github Repo Page</title>
        <meta
          name="description"
          content="Generated by create next app for Ennismore tech test"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box component="main">
        <Typography
          variant="h1"
          textAlign="center"
          sx={{
            color: (theme) => theme.text.main,
            fontSize: "26px",
            my: 2,
            fontWeight: 600,
          }}
        >
          Repository page
        </Typography>

        {objRepository && (
          <Box sx={{ display: "flex", flexDirection: "column", rowGap: 1 }}>
            <Typography
              variant="h2"
              sx={{
                fontSize: "22px",
                textAlign: "center",
                color: (theme) => theme.text.main,
                fontWeight: 600,
              }}
            >
              {objRepository?.name}
            </Typography>
            <Typography variant="caption" sx={{ textAlign: "center" }}>
              Description: {objRepository?.description || "not mentioned"}
            </Typography>
            <Typography variant="caption" sx={{ textAlign: "center" }}>
              License: {getLicenceData(objRepository?.license)}
            </Typography>
          </Box>
        )}
      </Box>
    </Container>
  );
};

export default RepositoryPage;
